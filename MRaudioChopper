#! /opt/local/bin/bash
#-x
set -o errexit

#-----------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------

#takes one argument: integer value that is the amount in seconds the audio file
#is chopped to
#a positive value trims the file from the beginning and expects a folder named /shortStart
#in the pwd

#a negative value trims it from the end and expects a folder named /shortEnd in the pwd

#the resulting file is transcoded to a .aiff at 44.1kHz

#no checks are made if the files in the directory are actually soundfiles...
#no checks are made if /short[End/Start] exist

# https://github.com/MIB1700/MRaudioChopperStitcher/
#-----------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------

#assign arg 1 to var time; if not set use default 12
time=${1:-12}
shopt -s nullglob # Sets nullglob
shopt -s nocaseglob # Sets nocaseglob
shopt -s extglob

mkdir "$(pwd)/shortStart/"
mkdir "$(pwd)/shortEnd/"

for file in *.@(aa|aac|aiff|aif|alac|au|m4a|mp3|ogg|oga|mogg|opus|raw|wav|wma|webm)
do
   if [[ -f "$file" && -e "$file" ]]; then

   		filename=${file%.*}
   		#extension=${file##*.}

   		if (( "$time" > 0 )); then


			newFile="$(pwd)/shortStart/${filename}_shortStart.aiff"

			if ! ffmpeg -y -i "$file" -ss 0 -to "$time" -ar 44100 "$newFile"; then
				 echo "Unable to extrac audio from ${file}" >&2
				 exit 1
			fi

		elif (( "$time" < 0 )); then


			newFile="$(pwd)/shortEnd/${filename}_shortEnd.aiff"

			if ! ffmpeg -sseof "$time" -i "$file" -ar 44100 "$newFile"; then
				 echo "Unable to extrac audio from ${file}" >&2
				 exit 1
			fi
        fi

   		echo "$newFile"
	fi
done

rmdir "$(pwd)/shortEnd/"
rmdir "$(pwd)/shortStart/"

shopt -u nocaseglob # Unsets nocaseglob
shopt -u nullglob # Unsets nullglob
shopt -u extglob

exit 0